______________________________________________________________________________________________________________________________________________________________________

Problem: Valid Palindrome
A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.

Example 1:
Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

Example 2:
Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.

Example 3:
Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.

Constraints:
1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.

______________________________________________________________________________________________________________________________________________________________________


Solution:

class Solution {
    public boolean isPalindrome(String s) {
        s = s.toLowerCase().trim();
        
        StringBuilder str = new StringBuilder();
        
        for(int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            
            //0->48 && 9-> 57 a -> 97 && z-> 122
            if((ch >= 48 && ch <=57) || (ch >= 97 && ch <= 122))
                str.append(ch);
        }
        
        String s1 = str.toString();
        String s2 = str.reverse().toString();
        
        return s1.equals(s2);
    }
}
______________________________________________________________________________________________________________________________________________________________________
